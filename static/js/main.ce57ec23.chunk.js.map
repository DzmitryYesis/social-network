{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPost/MyPost.module.css","components/Header/Header.module.css","components/Navbar/Friends/Friend/Friend.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","enum/path.ts","components/Dialogs/Message/Message.tsx","components/Dialogs/UserName/UserName.tsx","components/Dialogs/Dialogs.tsx","store/actions/dialogsActions.ts","store/actions/profileActions.ts","store/selectors/selectorDialogs.ts","store/selectors/selectorSidebar.ts","store/selectors/selectorProfile.ts","components/Dialogs/DialogsContainer.tsx","components/Header/Header.tsx","components/Music/Music.tsx","components/Navbar/Friends/Friend/Friend.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Profile/MyPost/Post/Post.tsx","components/Profile/MyPost/MyPost.tsx","components/Profile/MyPost/MyPostContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","App.tsx","reportWebVitals.ts","store/reducers/profileReducer.ts","store/reducers/dialogsReducer.ts","store/reducers/sidebarReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","PATH","Message","message","className","s","UserName","name","id","path","DIALOGS","dialog","active","to","Dialogs","dialogsPage","writeMessage","sendMessage","dialogs","dialogsItems","dialogsData","map","d","messages","messagesData","m","value","newMessage","onChange","e","currentTarget","type","onClick","ADD_NEW_MESSAGE","CHANGE_MESSAGE_STATE","ADD_NEW_POST","CHANGE_POST_STATE","selectDialogPage","state","selectFriendData","sidebar","selectProfileData","profileData","DialogsContainer","dispatch","useDispatch","dialogPage","useSelector","payload","text","Header","header","src","alt","Music","Friend","logo","friend","Friends","friends","friendsData","f","Navbar","nav","item","PROFILE","isActive","NEWS","MUSIC","SETTINGS","News","Settings","Post","post","numberLike","MyPost","addPost","changePost","postBlock","newPost","posts","postsData","v","MyPostContainer","ProfileInfo","discriptionBlock","Profile","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","Date","getDate","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce57ec23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2NgB-\",\"item\":\"Navbar_item__23hrs\",\"active\":\"Navbar_active__1X3Br\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__33z2n\",\"dialogsItems\":\"Dialogs_dialogsItems__1R2wz\",\"dialog\":\"Dialogs_dialog__2DDAt\",\"active\":\"Dialogs_active__3PoqJ\",\"messages\":\"Dialogs_messages__1pvgV\",\"message\":\"Dialogs_message__2bjpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPost_postBlock__2OYbL\",\"posts\":\"MyPost_posts__3TS_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1cdgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__1ufNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Y2Ym0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__GXuCy\"};","export enum PATH {\n  PROFILE = '/profile',\n  DIALOGS = '/dialogs/*',\n  NEWS = '/news',\n  MUSIC = '/music',\n  SETTINGS = '/settings/*',\n}\n","import React, { ReactElement } from 'react';\n\nimport s from '../Dialogs.module.css';\n\nimport { MessagePropsType } from 'types';\n\nexport const Message = ({ message }: MessagePropsType): ReactElement => (\n  <div className={s.message}>{message}</div>\n);\n","import React, { ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport s from '../Dialogs.module.css';\n\nimport { PATH } from 'enum';\nimport { UserNamePropsType } from 'types';\n\nexport const UserName = ({ name, id }: UserNamePropsType): ReactElement => {\n  const path = `${PATH.DIALOGS}${id}`;\n  return (\n    <div className={`${s.dialog} ${s.active}`}>\n      <NavLink to={path}>{name}</NavLink>\n    </div>\n  );\n};\n","import React, { ChangeEvent, ReactElement } from 'react';\n\nimport s from './Dialogs.module.css';\nimport { Message } from './Message';\nimport { UserName } from './UserName';\n\nimport {\n  DialogsDataPropsType,\n  DialogsMessagePropsType,\n  MessageDataPropsType,\n} from 'types';\n\nexport const Dialogs = ({\n  dialogsPage,\n  writeMessage,\n  sendMessage,\n}: DialogsMessagePropsType): ReactElement => {\n  const sendMessageHandle = (): void => {\n    sendMessage();\n  };\n\n  const writeMessageHandle = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    writeMessage(e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        {dialogsPage.dialogsData.map((d: DialogsDataPropsType) => (\n          <UserName key={d.id} name={d.name} id={d.id} />\n        ))}\n      </div>\n      <div className={s.messages}>\n        {dialogsPage.messagesData.map((m: MessageDataPropsType) => (\n          <Message key={m.id} message={m.message} />\n        ))}\n        <textarea value={dialogsPage.newMessage} onChange={writeMessageHandle} />\n        <button type=\"button\" onClick={sendMessageHandle}>\n          Send message\n        </button>\n      </div>\n    </div>\n  );\n};\n","export const ADD_NEW_MESSAGE = 'DIALOGS/ADD_NEW_MESSAGE';\nexport const CHANGE_MESSAGE_STATE = 'DIALOGS/CHANGE_MESSAGE_STATE';\n\nexport const addNewMessageAC = (message: string) =>\n  ({ type: ADD_NEW_MESSAGE, payload: { message } } as const);\n\nexport const changeMessagePostStateAC = (newMessage: string) =>\n  ({ type: CHANGE_MESSAGE_STATE, payload: { newMessage } } as const);\n","export const ADD_NEW_POST = 'PROFILE/ADD_NEW_POST';\nexport const CHANGE_POST_STATE = 'PROFILE/CHANGE_POST_STATE';\n\nexport const addPostAC = (post: string) =>\n  ({ type: ADD_NEW_POST, payload: { post } } as const);\n\nexport const changeNewPostStateAC = (newPost: string) =>\n  ({ type: CHANGE_POST_STATE, payload: { newPost } } as const);\n","import { AppRootStateType } from 'store/store';\nimport { DialogsPagePropsType } from 'types';\n\nexport const selectDialogPage = (state: AppRootStateType): DialogsPagePropsType =>\n  state.dialogsData;\n","import { AppRootStateType } from 'store/store';\nimport { FriendsDataPropsType } from 'types';\n\nexport const selectFriendData = (state: AppRootStateType): FriendsDataPropsType =>\n  state.sidebar;\n","import { AppRootStateType } from 'store/store';\nimport { ProfilePagePropsType } from 'types';\n\nexport const selectProfileData = (state: AppRootStateType): ProfilePagePropsType =>\n  state.profileData;\n","import React, { ReactElement } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Dialogs } from './Dialogs';\n\nimport { addNewMessageAC, changeMessagePostStateAC } from 'store/actions';\nimport { selectDialogPage } from 'store/selectors';\n\nexport const DialogsContainer = (): ReactElement => {\n  const dispatch = useDispatch();\n\n  const dialogPage = useSelector(selectDialogPage);\n\n  const sendMessage = (): void => {\n    dispatch(addNewMessageAC(dialogPage.newMessage));\n  };\n\n  const writeMessage = (text: string): void => {\n    dispatch(changeMessagePostStateAC(text));\n  };\n\n  return (\n    <Dialogs\n      dialogsPage={dialogPage}\n      sendMessage={sendMessage}\n      writeMessage={writeMessage}\n    />\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport s from './Header.module.css';\n\nexport const Header = (): ReactElement => (\n  <header className={s.header}>\n    <img\n      src=\"https://1757140519.rsc.cdn77.org/static/v3/img/products/logo.png\"\n      alt=\"social-network logo\"\n    />\n  </header>\n);\n","import React, { ReactElement } from 'react';\n\nexport const Music = (): ReactElement => <div>Music</div>;\n","import React, { ReactElement } from 'react';\n\nimport s from './Friend.module.css';\n\nexport type FriendPropsType = {\n  name: string;\n  logo: string;\n};\n\nexport const Friend = ({ name, logo }: FriendPropsType): ReactElement => (\n  <div className={s.friend}>\n    <img src={logo} alt=\"friend logo\" />\n    <div>{name}</div>\n  </div>\n);\n","import React, { ReactElement } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Friend } from './Friend';\nimport s from './Friends.module.css';\n\nimport { selectFriendData } from 'store/selectors';\n\nexport const Friends = (): ReactElement => {\n  const sidebar = useSelector(selectFriendData);\n\n  return (\n    <div className={s.friends}>\n      <h3>Friends</h3>\n      <div>\n        {sidebar.friendsData.map(f => (\n          <Friend name={f.name} logo={f.logo} key={f.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { Friends } from './Friends';\nimport s from './Navbar.module.css';\n\nimport { PATH } from 'enum';\n\nexport const Navbar = (): ReactElement => (\n  <div className={s.nav}>\n    <div className={s.item}>\n      <NavLink to={PATH.PROFILE} className={({ isActive }) => (isActive ? s.active : '')}>\n        Profile\n      </NavLink>\n    </div>\n    <div className={s.item}>\n      <NavLink to={PATH.DIALOGS} className={({ isActive }) => (isActive ? s.active : '')}>\n        Messages\n      </NavLink>\n    </div>\n    <div className={s.item}>\n      <NavLink to={PATH.NEWS} className={({ isActive }) => (isActive ? s.active : '')}>\n        News\n      </NavLink>\n    </div>\n    <div className={s.item}>\n      <NavLink to={PATH.MUSIC} className={({ isActive }) => (isActive ? s.active : '')}>\n        Music\n      </NavLink>\n    </div>\n    <div className={s.item}>\n      <NavLink\n        to={PATH.SETTINGS}\n        className={({ isActive }) => (isActive ? s.active : '')}\n      >\n        Settings\n      </NavLink>\n    </div>\n    <div>\n      <Friends />\n    </div>\n  </div>\n);\n","import React, { ReactElement } from 'react';\n\nexport const News = (): ReactElement => <div>News</div>;\n","import React, { ReactElement } from 'react';\n\nexport const Settings = (): ReactElement => <div>Settings</div>;\n","import React, { ReactElement } from 'react';\n\nimport s from './Post.module.css';\n\nexport type PostPropsType = {\n  post: string;\n  numberLike: number;\n};\n\nexport const Post = ({ post, numberLike }: PostPropsType): ReactElement => (\n  <div className={s.item}>\n    <img\n      src=\"https://www.meme-arsenal.com/memes/58a847c6512c43f49c91cbebb847e27c.jpg\"\n      alt=\"post logo\"\n    />\n    {post}\n    <div>\n      <span>{numberLike} likes</span>\n    </div>\n  </div>\n);\n","import React, { ChangeEvent, ReactElement } from 'react';\n\nimport s from './MyPost.module.css';\nimport { Post } from './Post';\n\nimport { ProfilePagePropsType } from 'types';\n\ntype MyPostPropsType = {\n  addPost: () => void;\n  changePost: (text: string) => void;\n  profileData: ProfilePagePropsType;\n};\n\nexport const MyPost = ({\n  addPost,\n  changePost,\n  profileData,\n}: MyPostPropsType): ReactElement => {\n  const addPostHandle = (): void => {\n    addPost();\n  };\n  const changePostHandle = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    changePost(e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.postBlock}>\n      <h3>My posts</h3>\n      <div>\n        <textarea onChange={changePostHandle} value={profileData.newPost} />\n      </div>\n      <div>\n        <button onClick={addPostHandle} type=\"button\">\n          Add post\n        </button>\n      </div>\n      <div className={s.posts}>\n        {profileData.postsData.map(v => (\n          <Post key={v.id} post={v.post} numberLike={v.numberLike} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { MyPost } from './MyPost';\n\nimport { addPostAC, changeNewPostStateAC } from 'store/actions';\nimport { selectProfileData } from 'store/selectors';\n\nexport const MyPostContainer = (): ReactElement => {\n  const dispatch = useDispatch();\n\n  const profileData = useSelector(selectProfileData);\n\n  const addPost = (): void => {\n    dispatch(addPostAC(profileData.newPost));\n  };\n  const changePost = (text: string): void => {\n    dispatch(changeNewPostStateAC(text));\n  };\n\n  return <MyPost addPost={addPost} changePost={changePost} profileData={profileData} />;\n};\n","import React, { ReactElement } from 'react';\n\nimport s from './ProfileInfo.module.css';\n\nexport const ProfileInfo = (): ReactElement => (\n  <div>\n    <img\n      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQeAnH9q1eO2cMNhym5S0zm0k3i4wvJ3tjLVg&usqp=CAU\"\n      alt=\"profile-logo\"\n    />\n    <div className={s.discriptionBlock}>ava+description</div>\n  </div>\n);\n","import React, { ReactElement } from 'react';\n\nimport { MyPostContainer } from 'components/Profile/MyPost';\nimport { ProfileInfo } from 'components/Profile/ProfileInfo';\n\nexport const Profile = (): ReactElement => (\n  <div>\n    <ProfileInfo />\n    <MyPostContainer />\n  </div>\n);\n","import React, { ReactElement } from 'react';\n\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\n\nimport {\n  DialogsContainer,\n  Header,\n  Music,\n  Navbar,\n  News,\n  Settings,\n  Profile,\n} from 'components';\nimport { PATH } from 'enum';\n\nexport const App = (): ReactElement => (\n  <div className=\"app-wrapper\">\n    <Header />\n    <Navbar />\n    <div className=\"app-wrapper-content\">\n      <Routes>\n        <Route path={PATH.PROFILE} element={<Profile />} />\n        <Route path={PATH.DIALOGS} element={<DialogsContainer />} />\n        <Route path={PATH.NEWS} element={<News />} />\n        <Route path={PATH.MUSIC} element={<Music />} />\n        <Route path={PATH.SETTINGS} element={<Settings />} />\n      </Routes>\n    </div>\n  </div>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_NEW_POST, CHANGE_POST_STATE } from 'store/actions';\nimport { ProfilePagePropsType, CommonActionsType } from 'types';\n\nconst initialState = {\n  postsData: [\n    { id: 1, post: 'Hi! How are you?', numberLike: 5 },\n    { id: 2, post: \"It's my first post\", numberLike: 45 },\n    { id: 3, post: 'Welcome to hell', numberLike: 12 },\n    { id: 4, post: 'My beautiful daughter', numberLike: 457 },\n    { id: 5, post: 'My wife loves me', numberLike: 913 },\n  ],\n  newPost: '',\n};\n\nexport const profileReducer = (\n  state: ProfilePagePropsType = initialState,\n  action: CommonActionsType,\n): ProfilePagePropsType => {\n  switch (action.type) {\n    case ADD_NEW_POST:\n      return {\n        ...state,\n        postsData: [\n          ...state.postsData,\n          { id: new Date().getDate(), post: action.payload.post, numberLike: 0 },\n        ],\n        newPost: '',\n      };\n    case CHANGE_POST_STATE:\n      return { ...state, newPost: action.payload.newPost };\n    default:\n      return state;\n  }\n};\n","import { ADD_NEW_MESSAGE, CHANGE_MESSAGE_STATE } from 'store/actions';\nimport { CommonActionsType, DialogsPagePropsType } from 'types';\n\nconst initialState = {\n  dialogsData: [\n    { id: 1, name: 'Brat' },\n    { id: 2, name: 'Nasty' },\n    { id: 3, name: 'Kaisa' },\n    { id: 4, name: 'Vlad' },\n    { id: 5, name: 'Gnedenko' },\n    { id: 6, name: 'Mash' },\n    { id: 7, name: 'Artem' },\n  ],\n  messagesData: [\n    { id: 1, message: 'Ho!' },\n    { id: 2, message: 'How are you?' },\n    { id: 3, message: 'What about one cup of coffee?' },\n    { id: 4, message: 'Great!' },\n    { id: 5, message: 'My name Jira Smolensk' },\n    { id: 6, message: \"It's joke\" },\n  ],\n  newMessage: '',\n};\n\nexport const dialogsReducer = (\n  state: DialogsPagePropsType = initialState,\n  action: CommonActionsType,\n): DialogsPagePropsType => {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      return {\n        ...state,\n        messagesData: [\n          ...state.messagesData,\n          { id: new Date().getDate(), message: action.payload.message },\n        ],\n        newMessage: '',\n      };\n    case CHANGE_MESSAGE_STATE:\n      return { ...state, newMessage: action.payload.newMessage };\n    default:\n      return state;\n  }\n};\n","import { FriendsDataPropsType } from 'types';\n\nconst initialState = {\n  friendsData: [\n    {\n      id: 1,\n      name: 'Вася',\n      logo: 'https://www.meme-arsenal.com/memes/87d4bfeed251dba0ce946e9e594dbdb6.jpg',\n    },\n    {\n      id: 2,\n      name: 'Слава',\n      logo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSsb7SOxwRvIFEmASzSMODt5uyBrC1IF11vNl9hA4LQ5XeSIKX-J0fqhRruNH4Q4VP0HJA&usqp=CAU',\n    },\n    {\n      id: 3,\n      name: 'Victor',\n      logo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSICcLEiVZAd8p9NH7V2-xhJg_mrCvzIUswvyfZlnu1DuYspqNltDOUXtkzskIain1gJmI&usqp=CAU',\n    },\n  ],\n};\n\nexport const sidebarReducer = (\n  state: FriendsDataPropsType = initialState,\n): FriendsDataPropsType => ({ ...state });\n","import { combineReducers, createStore } from 'redux';\n\nimport { dialogsReducer, profileReducer, sidebarReducer } from 'store/reducers';\n\nconst rootReducer = combineReducers({\n  profileData: profileReducer,\n  dialogsData: dialogsReducer,\n  sidebar: sidebarReducer,\n});\n\nexport const store = createStore(rootReducer);\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from 'App';\nimport reportWebVitals from 'reportWebVitals';\nimport { store } from 'store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}